import 'dart:collection';
import 'dart:math';

import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';

import '../widgets/OrdersDisplayer.dart';
import 'package:flutter_gen/gen_l10n/app_localizations.dart';

class cart extends StatefulWidget {
  const cart({super.key});
  @override
  State<cart> createState() => _cartState();
}

class _cartState extends State<cart> {
  final currentUser1 = FirebaseAuth.instance.currentUser!.uid;
  List<DocumentSnapshot<Object>> documents = [];

  @override
  void initState() {
    super.initState();
    fetchData();
  }

  Future<void> fetchData() async {
    final QuerySnapshot<Map<String, dynamic>> snapshot = await FirebaseFirestore
        .instance
        .collection(
            'orders') // Replace 'your_collection' with the actual collection name
        .where('User ID',
            isEqualTo:
                currentUser1) // Replace 'field_name' with the field you want to query and 'field_value' with the value you are looking for
        .get();

    setState(() {
      documents = snapshot.docs;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
          elevation: 3,
          title: Text(
            AppLocalizations.of(context)!.order,
            style: TextStyle(color: Colors.black),
          ),
          backgroundColor: Colors.white,
          centerTitle: true),
      body: ListView.builder(
        itemCount: documents.length,
        itemBuilder: (BuildContext context, int index) {
          return CardDisplayer(
            orderstatus: documents[index]['Order Status'],
            storename: documents[index]['Place Name'],
            order_details: documents[index]['Order Detials'],
            ordernumber: documents[index]['Order Number'],
            orderdate: documents[index]['Order Date'],
          );
        },
      ),
    );
  }
}











import 'package:flutter/material.dart';
import 'package:cloud_firestore/cloud_firestore.dart';

class FetchDataPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Fetch Data from Firestore'),
      ),
      body: FutureBuilder<QuerySnapshot<Map<String, dynamic>>>(
        future: FirebaseFirestore.instance
            .collection('your_collection') // Replace 'your_collection' with the actual collection name
            .where('field_name', isEqualTo: 'field_value') // Replace 'field_name' with the field you want to query and 'field_value' with the value you are looking for
            .get(),
        builder: (BuildContext context, AsyncSnapshot<QuerySnapshot<Map<String, dynamic>>> snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            return Center(child: CircularProgressIndicator());
          }

          if (snapshot.hasError) {
            return Center(child: Text('Error: ${snapshot.error}'));
          }

          final List<QueryDocumentSnapshot<Map<String, dynamic>>> documents = snapshot.data!.docs;
          return ListView.builder(
            itemCount: documents.length,
            itemBuilder: (BuildContext context, int index) {
              final document = documents[index];
              final data = document.data();

              return ListTile(
                title: Text(data['title']), // Replace 'title' with the actual field name in your document
                subtitle: Text(data['description']), // Replace 'description' with the actual field name in your document
              );
            },
          );
        },
      ),
    );
  }
}
